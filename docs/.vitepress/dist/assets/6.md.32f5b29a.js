import{_ as s,o as n,c as a,Q as l}from"./chunks/framework.a9d1f0e8.js";const p="/assets/test_04.87fae662.png",o="/assets/test_05.17beed87.png",A=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"6.md","filePath":"6.md"}'),e={name:"6.md"},t=l(`<h2 id="第六章-继续前行" tabindex="-1">第六章：继续前行 <a class="header-anchor" href="#第六章-继续前行" aria-label="Permalink to &quot;第六章：继续前行&quot;">​</a></h2><p>我们继续分析第四章中提到的四个主要动作中的第三个动作：注册服务提供者，</p><ul><li><p><s>设置基础目录路径</s></p></li><li><p><s>注册基础绑定</s></p></li><li><p>注册服务提供者</p></li><li><p>注册核心别名类</p></li></ul><p>对应的是下面这行代码：</p><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#79B8FF;">$this</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">registerBaseServiceProviders</span><span style="color:#E1E4E8;">();</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#005CC5;">$this</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">registerBaseServiceProviders</span><span style="color:#24292E;">();</span></span></code></pre></div><p>追踪这个方法的具体实现：</p><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;"> * Register all of the base service providers.</span></span>
<span class="line"><span style="color:#6A737D;"> *</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#F97583;">@return</span><span style="color:#6A737D;"> </span><span style="color:#F97583;">void</span></span>
<span class="line"><span style="color:#6A737D;"> */</span></span>
<span class="line"><span style="color:#F97583;">protected</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">registerBaseServiceProviders</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">$this</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">register</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">EventServiceProvider</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">$this</span><span style="color:#E1E4E8;">));</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">$this</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">register</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">LogServiceProvider</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">$this</span><span style="color:#E1E4E8;">));</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">$this</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">register</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">RoutingServiceProvider</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">$this</span><span style="color:#E1E4E8;">));</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;"> * Register all of the base service providers.</span></span>
<span class="line"><span style="color:#6A737D;"> *</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#D73A49;">@return</span><span style="color:#6A737D;"> </span><span style="color:#D73A49;">void</span></span>
<span class="line"><span style="color:#6A737D;"> */</span></span>
<span class="line"><span style="color:#D73A49;">protected</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">registerBaseServiceProviders</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">$this</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">register</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">EventServiceProvider</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">$this</span><span style="color:#24292E;">));</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">$this</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">register</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">LogServiceProvider</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">$this</span><span style="color:#24292E;">));</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">$this</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">register</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">RoutingServiceProvider</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">$this</span><span style="color:#24292E;">));</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><blockquote><p>vendor/laravel/framework/src/Illuminate/Foundation/Application.php</p></blockquote><p>继续追踪register：</p><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;"> * Register a service provider with the application.</span></span>
<span class="line"><span style="color:#6A737D;"> *</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#F97583;">@param</span><span style="color:#6A737D;">  </span><span style="color:#79B8FF;">\\Illuminate\\Support\\ServiceProvider</span><span style="color:#6A737D;">|</span><span style="color:#F97583;">string</span><span style="color:#6A737D;">  $provider</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#F97583;">@param</span><span style="color:#6A737D;">  </span><span style="color:#F97583;">bool</span><span style="color:#6A737D;">   $force</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#F97583;">@return</span><span style="color:#6A737D;"> </span><span style="color:#79B8FF;">\\Illuminate\\Support\\ServiceProvider</span></span>
<span class="line"><span style="color:#6A737D;"> */</span></span>
<span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">register</span><span style="color:#E1E4E8;">($provider, $force </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (($registered </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">$this</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">getProvider</span><span style="color:#E1E4E8;">($provider)) </span><span style="color:#F97583;">&amp;&amp;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">!</span><span style="color:#E1E4E8;"> $force) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> $registered;</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// If the given &quot;provider&quot; is a string, we will resolve it, passing in the</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// application instance automatically for the developer. This is simply</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// a more convenient way of specifying your service provider classes.</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#79B8FF;">is_string</span><span style="color:#E1E4E8;">($provider)) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        $provider </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">$this</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">resolveProvider</span><span style="color:#E1E4E8;">($provider);</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    $provider</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">register</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// If there are bindings / singletons set as properties on the provider we</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// will spin through them and register them with the application, which</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// serves as a convenience layer while registering a lot of bindings.</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#79B8FF;">property_exists</span><span style="color:#E1E4E8;">($provider, </span><span style="color:#9ECBFF;">&#39;bindings&#39;</span><span style="color:#E1E4E8;">)) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">foreach</span><span style="color:#E1E4E8;"> ($provider</span><span style="color:#F97583;">-&gt;</span><span style="color:#E1E4E8;">bindings </span><span style="color:#F97583;">as</span><span style="color:#E1E4E8;"> $key </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> $value) {</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#79B8FF;">$this</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">bind</span><span style="color:#E1E4E8;">($key, $value);</span></span>
<span class="line"><span style="color:#E1E4E8;">        }</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#79B8FF;">property_exists</span><span style="color:#E1E4E8;">($provider, </span><span style="color:#9ECBFF;">&#39;singletons&#39;</span><span style="color:#E1E4E8;">)) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">foreach</span><span style="color:#E1E4E8;"> ($provider</span><span style="color:#F97583;">-&gt;</span><span style="color:#E1E4E8;">singletons </span><span style="color:#F97583;">as</span><span style="color:#E1E4E8;"> $key </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> $value) {</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#79B8FF;">$this</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">singleton</span><span style="color:#E1E4E8;">($key, $value);</span></span>
<span class="line"><span style="color:#E1E4E8;">        }</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">$this</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">markAsRegistered</span><span style="color:#E1E4E8;">($provider);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// If the application has already booted, we will call this boot method on</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// the provider class so it has an opportunity to do its boot logic and</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// will be ready for any usage by this developer&#39;s application logic.</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#79B8FF;">$this</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">isBooted</span><span style="color:#E1E4E8;">()) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">$this</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">bootProvider</span><span style="color:#E1E4E8;">($provider);</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> $provider;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;"> * Register a service provider with the application.</span></span>
<span class="line"><span style="color:#6A737D;"> *</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#D73A49;">@param</span><span style="color:#6A737D;">  </span><span style="color:#005CC5;">\\Illuminate\\Support\\ServiceProvider</span><span style="color:#6A737D;">|</span><span style="color:#D73A49;">string</span><span style="color:#6A737D;">  $provider</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#D73A49;">@param</span><span style="color:#6A737D;">  </span><span style="color:#D73A49;">bool</span><span style="color:#6A737D;">   $force</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#D73A49;">@return</span><span style="color:#6A737D;"> </span><span style="color:#005CC5;">\\Illuminate\\Support\\ServiceProvider</span></span>
<span class="line"><span style="color:#6A737D;"> */</span></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">register</span><span style="color:#24292E;">($provider, $force </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">false</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (($registered </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">$this</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">getProvider</span><span style="color:#24292E;">($provider)) </span><span style="color:#D73A49;">&amp;&amp;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">!</span><span style="color:#24292E;"> $force) {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> $registered;</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// If the given &quot;provider&quot; is a string, we will resolve it, passing in the</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// application instance automatically for the developer. This is simply</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// a more convenient way of specifying your service provider classes.</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#005CC5;">is_string</span><span style="color:#24292E;">($provider)) {</span></span>
<span class="line"><span style="color:#24292E;">        $provider </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">$this</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">resolveProvider</span><span style="color:#24292E;">($provider);</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    $provider</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">register</span><span style="color:#24292E;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// If there are bindings / singletons set as properties on the provider we</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// will spin through them and register them with the application, which</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// serves as a convenience layer while registering a lot of bindings.</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#005CC5;">property_exists</span><span style="color:#24292E;">($provider, </span><span style="color:#032F62;">&#39;bindings&#39;</span><span style="color:#24292E;">)) {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">foreach</span><span style="color:#24292E;"> ($provider</span><span style="color:#D73A49;">-&gt;</span><span style="color:#24292E;">bindings </span><span style="color:#D73A49;">as</span><span style="color:#24292E;"> $key </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> $value) {</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#005CC5;">$this</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">bind</span><span style="color:#24292E;">($key, $value);</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#005CC5;">property_exists</span><span style="color:#24292E;">($provider, </span><span style="color:#032F62;">&#39;singletons&#39;</span><span style="color:#24292E;">)) {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">foreach</span><span style="color:#24292E;"> ($provider</span><span style="color:#D73A49;">-&gt;</span><span style="color:#24292E;">singletons </span><span style="color:#D73A49;">as</span><span style="color:#24292E;"> $key </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> $value) {</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#005CC5;">$this</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">singleton</span><span style="color:#24292E;">($key, $value);</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">$this</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">markAsRegistered</span><span style="color:#24292E;">($provider);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// If the application has already booted, we will call this boot method on</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// the provider class so it has an opportunity to do its boot logic and</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// will be ready for any usage by this developer&#39;s application logic.</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#005CC5;">$this</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">isBooted</span><span style="color:#24292E;">()) {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">$this</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">bootProvider</span><span style="color:#24292E;">($provider);</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> $provider;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><blockquote><p>vendor/laravel/framework/src/Illuminate/Foundation/Application.php</p></blockquote><p>要通读这个方法的所有代码，请参考【附录六】。在这一节中，我们关注的核心代码是下面这句：</p><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">$provider</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">register</span><span style="color:#E1E4E8;">();</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">$provider</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">register</span><span style="color:#24292E;">();</span></span></code></pre></div><p>即register方法的主要动作，就是执行provider对象本身的register方法，然后就返回对象实例本身了。于是我们继续追踪provider对象身上的register方法。由于provider对象指向哪个实例是不确定(由传入的参数决定)的，因此我们以第一个EventServiceProvider为例，进入这个类中，继续去追踪它的register方法：</p><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;"> * Register the service provider.</span></span>
<span class="line"><span style="color:#6A737D;"> *</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#F97583;">@return</span><span style="color:#6A737D;"> </span><span style="color:#F97583;">void</span></span>
<span class="line"><span style="color:#6A737D;"> */</span></span>
<span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">register</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">$this</span><span style="color:#F97583;">-&gt;</span><span style="color:#E1E4E8;">app</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">singleton</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;events&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> ($app) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Dispatcher</span><span style="color:#E1E4E8;">($app))</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">setQueueResolver</span><span style="color:#E1E4E8;">(</span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> () </span><span style="color:#F97583;">use</span><span style="color:#E1E4E8;"> ($app) {</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> $app</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">make</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">QueueFactoryContract</span><span style="color:#F97583;">::class</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">        });</span></span>
<span class="line"><span style="color:#E1E4E8;">    });</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;"> * Register the service provider.</span></span>
<span class="line"><span style="color:#6A737D;"> *</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#D73A49;">@return</span><span style="color:#6A737D;"> </span><span style="color:#D73A49;">void</span></span>
<span class="line"><span style="color:#6A737D;"> */</span></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">register</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">$this</span><span style="color:#D73A49;">-&gt;</span><span style="color:#24292E;">app</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">singleton</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;events&#39;</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> ($app) {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Dispatcher</span><span style="color:#24292E;">($app))</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">setQueueResolver</span><span style="color:#24292E;">(</span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> () </span><span style="color:#D73A49;">use</span><span style="color:#24292E;"> ($app) {</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> $app</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">make</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">QueueFactoryContract</span><span style="color:#D73A49;">::class</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">        });</span></span>
<span class="line"><span style="color:#24292E;">    });</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><blockquote><p>vendor/laravel/framework/src/Illuminate/Events/EventServiceProvider.php</p></blockquote><p>我们看到，register方法，执行了一次singleton，singleton方法我们在第五章中已经讲解过，它的主要作用就是往app这个共享的容器身上挂载键值对。这里，我们看到events这个&quot;键&quot;再次被挂载到一个闭包值上了。</p><p>除此之外，我们还要重点关注一下，实例化provider的过程中，provider类的构造函数执行了什么，我们发现构造函数在父类\\Illuminate\\Support\\ServiceProvider中：</p><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;"> * Create a new service provider instance.</span></span>
<span class="line"><span style="color:#6A737D;"> *</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#F97583;">@param</span><span style="color:#6A737D;">  </span><span style="color:#79B8FF;">\\Illuminate\\Contracts\\Foundation\\Application</span><span style="color:#6A737D;">  $app</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#F97583;">@return</span><span style="color:#6A737D;"> </span><span style="color:#F97583;">void</span></span>
<span class="line"><span style="color:#6A737D;"> */</span></span>
<span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">__construct</span><span style="color:#E1E4E8;">($app)</span></span>
<span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">$this</span><span style="color:#F97583;">-&gt;</span><span style="color:#E1E4E8;">app </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> $app;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;"> * Create a new service provider instance.</span></span>
<span class="line"><span style="color:#6A737D;"> *</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#D73A49;">@param</span><span style="color:#6A737D;">  </span><span style="color:#005CC5;">\\Illuminate\\Contracts\\Foundation\\Application</span><span style="color:#6A737D;">  $app</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#D73A49;">@return</span><span style="color:#6A737D;"> </span><span style="color:#D73A49;">void</span></span>
<span class="line"><span style="color:#6A737D;"> */</span></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">__construct</span><span style="color:#24292E;">($app)</span></span>
<span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">$this</span><span style="color:#D73A49;">-&gt;</span><span style="color:#24292E;">app </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> $app;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><blockquote><p>vendor/laravel/framework/src/Illuminate/Support/ServiceProvider.php</p></blockquote><p>我们看到，这里只是简单地将传入的app变量值赋值给类的成员变量app。查看每个provider的register方法，你会发现，它们都是使用<code>$this-&gt;app-&gt;singleton...</code>这种方式去实现具体的register动作。我们看到，不管框架在&quot;注册基础服务提供者&quot;这个步骤中执行了多少次register，最后这些注册的服务类，都会被容器app&quot;接收&quot;，将来也是通过调用app去进行具体的实现。</p><p>此外，还值得注意的是，我们发现了下面这段代码：</p><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#79B8FF;">$this</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">isBooted</span><span style="color:#E1E4E8;">()) {</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#79B8FF;">$this</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">bootProvider</span><span style="color:#E1E4E8;">($provider);</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#005CC5;">$this</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">isBooted</span><span style="color:#24292E;">()) {</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#005CC5;">$this</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">bootProvider</span><span style="color:#24292E;">($provider);</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>大家可以通过&quot;var_dump中断测试&quot;(参考【附录一】)来测试一下，在默认情况下，注册第一个EventServiceProvider时，<code>$this-&gt;isBooted()</code>这里返回值是false。</p><p>也就是说，最开始register的时候，并没有走到这个if里面去。然而在if里面加exit语句，刷新应用主页时，代码却能成功进入到if中去。</p><p>如下，我们进行两次var_dump中断测试：</p><p>第一次：</p><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#79B8FF;">var_dump</span><span style="color:#E1E4E8;">($provider);</span></span>
<span class="line"><span style="color:#79B8FF;">var_dump</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">$this</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">isBooted</span><span style="color:#E1E4E8;">());</span></span>
<span class="line"><span style="color:#F97583;">exit</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#79B8FF;">$this</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">isBooted</span><span style="color:#E1E4E8;">()) {</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#79B8FF;">$this</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">bootProvider</span><span style="color:#E1E4E8;">($provider);</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#005CC5;">var_dump</span><span style="color:#24292E;">($provider);</span></span>
<span class="line"><span style="color:#005CC5;">var_dump</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">$this</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">isBooted</span><span style="color:#24292E;">());</span></span>
<span class="line"><span style="color:#D73A49;">exit</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#005CC5;">$this</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">isBooted</span><span style="color:#24292E;">()) {</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#005CC5;">$this</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">bootProvider</span><span style="color:#24292E;">($provider);</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>输出结果：</p><p><img src="`+p+`" alt=""></p><p>【图6.1】</p><p>第二次：</p><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#79B8FF;">$this</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">isBooted</span><span style="color:#E1E4E8;">()) {</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#79B8FF;">var_dump</span><span style="color:#E1E4E8;">($provider);</span><span style="color:#F97583;">exit</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;ccc&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#79B8FF;">$this</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">bootProvider</span><span style="color:#E1E4E8;">($provider);</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#005CC5;">$this</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">isBooted</span><span style="color:#24292E;">()) {</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#005CC5;">var_dump</span><span style="color:#24292E;">($provider);</span><span style="color:#D73A49;">exit</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;ccc&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#005CC5;">$this</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">bootProvider</span><span style="color:#24292E;">($provider);</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>输出结果：</p><p><img src="`+o+`" alt=""></p><p>【图6.2】</p><p>由于输出的字符串太长，我们仅截取部分显示在这里。</p><p>很明显，register方法至少被执行了两次：一次是应用启动时，一次是应用启动后。而且我们发现了一个比较奇怪的现象：第二次var_dump中断测试时页面要加载较长时间才能运行完成(对比第一次有明显的延时)。这是什么原因造成的呢？</p><p>要了解事情的真相，还得从var_dump打印的内容开始入手，按照我们的猜想，应用启动后，输出一个provider对象信息后，程序马上就退出(exit)了。没有道理有这么明显的延时。</p><p>现在我们来仔细查看var_dump语句输出的内容：</p><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">object</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">Illuminate</span><span style="color:#E1E4E8;">\\</span><span style="color:#79B8FF;">Hashing</span><span style="color:#E1E4E8;">\\</span><span style="color:#79B8FF;">HashServiceProvider</span><span style="color:#E1E4E8;">)</span><span style="color:#6A737D;">#288 (2) {</span></span>
<span class="line"><span style="color:#E1E4E8;">  [</span><span style="color:#9ECBFF;">&quot;app&quot;</span><span style="color:#E1E4E8;">:</span><span style="color:#F97583;">protected</span><span style="color:#E1E4E8;">]</span><span style="color:#F97583;">=&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#F97583;">object</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">Illuminate</span><span style="color:#E1E4E8;">\\</span><span style="color:#79B8FF;">Foundation</span><span style="color:#E1E4E8;">\\</span><span style="color:#79B8FF;">Application</span><span style="color:#E1E4E8;">)</span><span style="color:#6A737D;">#2 (31) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    [</span><span style="color:#9ECBFF;">&quot;basePath&quot;</span><span style="color:#E1E4E8;">:</span><span style="color:#F97583;">protected</span><span style="color:#E1E4E8;">]</span><span style="color:#F97583;">=&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">string</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">23</span><span style="color:#E1E4E8;">) </span><span style="color:#9ECBFF;">&quot;/home/vagrant/code/blog&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">    [</span><span style="color:#9ECBFF;">&quot;hasBeenBootstrapped&quot;</span><span style="color:#E1E4E8;">:</span><span style="color:#F97583;">protected</span><span style="color:#E1E4E8;">]</span><span style="color:#F97583;">=&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">    [</span><span style="color:#9ECBFF;">&quot;booted&quot;</span><span style="color:#E1E4E8;">:</span><span style="color:#F97583;">protected</span><span style="color:#E1E4E8;">]</span><span style="color:#F97583;">=&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">    [</span><span style="color:#9ECBFF;">&quot;bootingCallbacks&quot;</span><span style="color:#E1E4E8;">:</span><span style="color:#F97583;">protected</span><span style="color:#E1E4E8;">]</span><span style="color:#F97583;">=&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">array</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">    [</span><span style="color:#9ECBFF;">&quot;bootedCallbacks&quot;</span><span style="color:#E1E4E8;">:</span><span style="color:#F97583;">protected</span><span style="color:#E1E4E8;">]</span><span style="color:#F97583;">=&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">array</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">      [</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">]</span><span style="color:#F97583;">=&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">object</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">Closure</span><span style="color:#E1E4E8;">)</span><span style="color:#6A737D;">#178 (1) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        [</span><span style="color:#9ECBFF;">&quot;this&quot;</span><span style="color:#E1E4E8;">]</span><span style="color:#F97583;">=&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">object</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">App</span><span style="color:#E1E4E8;">\\</span><span style="color:#79B8FF;">Providers</span><span style="color:#E1E4E8;">\\</span><span style="color:#79B8FF;">RouteServiceProvider</span><span style="color:#E1E4E8;">)</span><span style="color:#6A737D;">#130 (3) {</span></span>
<span class="line"><span style="color:#E1E4E8;">          [</span><span style="color:#9ECBFF;">&quot;namespace&quot;</span><span style="color:#E1E4E8;">:</span><span style="color:#F97583;">protected</span><span style="color:#E1E4E8;">]</span><span style="color:#F97583;">=&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#F97583;">string</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">20</span><span style="color:#E1E4E8;">) </span><span style="color:#9ECBFF;">&quot;App\\Http\\Controllers&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">          [</span><span style="color:#9ECBFF;">&quot;app&quot;</span><span style="color:#E1E4E8;">:</span><span style="color:#F97583;">protected</span><span style="color:#E1E4E8;">]</span><span style="color:#F97583;">=&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#F97583;">*</span><span style="color:#79B8FF;">RECURSION</span><span style="color:#F97583;">*</span></span>
<span class="line"><span style="color:#E1E4E8;">          [</span><span style="color:#9ECBFF;">&quot;defer&quot;</span><span style="color:#E1E4E8;">:</span><span style="color:#F97583;">protected</span><span style="color:#E1E4E8;">]</span><span style="color:#F97583;">=&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">          </span><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">        }</span></span>
<span class="line"><span style="color:#E1E4E8;">      }</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">    [</span><span style="color:#9ECBFF;">&quot;terminatingCallbacks&quot;</span><span style="color:#E1E4E8;">:</span><span style="color:#F97583;">protected</span><span style="color:#E1E4E8;">]</span><span style="color:#F97583;">=&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">array</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">    [</span><span style="color:#9ECBFF;">&quot;serviceProviders&quot;</span><span style="color:#E1E4E8;">:</span><span style="color:#F97583;">protected</span><span style="color:#E1E4E8;">]</span><span style="color:#F97583;">=&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">array</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">25</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">      [</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">]</span><span style="color:#F97583;">=&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">object</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">Illuminate</span><span style="color:#E1E4E8;">\\</span><span style="color:#79B8FF;">Events</span><span style="color:#E1E4E8;">\\</span><span style="color:#79B8FF;">EventServiceProvider</span><span style="color:#E1E4E8;">)</span><span style="color:#6A737D;">#8 (2) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        [</span><span style="color:#9ECBFF;">&quot;app&quot;</span><span style="color:#E1E4E8;">:</span><span style="color:#F97583;">protected</span><span style="color:#E1E4E8;">]</span><span style="color:#F97583;">=&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">*</span><span style="color:#79B8FF;">RECURSION</span><span style="color:#F97583;">*</span></span>
<span class="line"><span style="color:#E1E4E8;">        [</span><span style="color:#9ECBFF;">&quot;defer&quot;</span><span style="color:#E1E4E8;">:</span><span style="color:#F97583;">protected</span><span style="color:#E1E4E8;">]</span><span style="color:#F97583;">=&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">      }</span></span>
<span class="line"><span style="color:#E1E4E8;">      [</span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">]</span><span style="color:#F97583;">=&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">object</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">Illuminate</span><span style="color:#E1E4E8;">\\</span><span style="color:#79B8FF;">Log</span><span style="color:#E1E4E8;">\\</span><span style="color:#79B8FF;">LogServiceProvider</span><span style="color:#E1E4E8;">)</span><span style="color:#6A737D;">#10 (2) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        [</span><span style="color:#9ECBFF;">&quot;app&quot;</span><span style="color:#E1E4E8;">:</span><span style="color:#F97583;">protected</span><span style="color:#E1E4E8;">]</span><span style="color:#F97583;">=&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">*</span><span style="color:#79B8FF;">RECURSION</span><span style="color:#F97583;">*</span></span>
<span class="line"><span style="color:#E1E4E8;">        [</span><span style="color:#9ECBFF;">&quot;defer&quot;</span><span style="color:#E1E4E8;">:</span><span style="color:#F97583;">protected</span><span style="color:#E1E4E8;">]</span><span style="color:#F97583;">=&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">bool</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">      }</span></span>
<span class="line"><span style="color:#E1E4E8;">      [</span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">]</span><span style="color:#F97583;">=&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">...</span></span>
<span class="line"><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">...</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">...</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">object</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">Illuminate</span><span style="color:#24292E;">\\</span><span style="color:#005CC5;">Hashing</span><span style="color:#24292E;">\\</span><span style="color:#005CC5;">HashServiceProvider</span><span style="color:#24292E;">)</span><span style="color:#6A737D;">#288 (2) {</span></span>
<span class="line"><span style="color:#24292E;">  [</span><span style="color:#032F62;">&quot;app&quot;</span><span style="color:#24292E;">:</span><span style="color:#D73A49;">protected</span><span style="color:#24292E;">]</span><span style="color:#D73A49;">=&gt;</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#D73A49;">object</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">Illuminate</span><span style="color:#24292E;">\\</span><span style="color:#005CC5;">Foundation</span><span style="color:#24292E;">\\</span><span style="color:#005CC5;">Application</span><span style="color:#24292E;">)</span><span style="color:#6A737D;">#2 (31) {</span></span>
<span class="line"><span style="color:#24292E;">    [</span><span style="color:#032F62;">&quot;basePath&quot;</span><span style="color:#24292E;">:</span><span style="color:#D73A49;">protected</span><span style="color:#24292E;">]</span><span style="color:#D73A49;">=&gt;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">string</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">23</span><span style="color:#24292E;">) </span><span style="color:#032F62;">&quot;/home/vagrant/code/blog&quot;</span></span>
<span class="line"><span style="color:#24292E;">    [</span><span style="color:#032F62;">&quot;hasBeenBootstrapped&quot;</span><span style="color:#24292E;">:</span><span style="color:#D73A49;">protected</span><span style="color:#24292E;">]</span><span style="color:#D73A49;">=&gt;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">bool</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">true</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    [</span><span style="color:#032F62;">&quot;booted&quot;</span><span style="color:#24292E;">:</span><span style="color:#D73A49;">protected</span><span style="color:#24292E;">]</span><span style="color:#D73A49;">=&gt;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">bool</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">true</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">    [</span><span style="color:#032F62;">&quot;bootingCallbacks&quot;</span><span style="color:#24292E;">:</span><span style="color:#D73A49;">protected</span><span style="color:#24292E;">]</span><span style="color:#D73A49;">=&gt;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">array</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">    [</span><span style="color:#032F62;">&quot;bootedCallbacks&quot;</span><span style="color:#24292E;">:</span><span style="color:#D73A49;">protected</span><span style="color:#24292E;">]</span><span style="color:#D73A49;">=&gt;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">array</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">      [</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">]</span><span style="color:#D73A49;">=&gt;</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">object</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">Closure</span><span style="color:#24292E;">)</span><span style="color:#6A737D;">#178 (1) {</span></span>
<span class="line"><span style="color:#24292E;">        [</span><span style="color:#032F62;">&quot;this&quot;</span><span style="color:#24292E;">]</span><span style="color:#D73A49;">=&gt;</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">object</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">App</span><span style="color:#24292E;">\\</span><span style="color:#005CC5;">Providers</span><span style="color:#24292E;">\\</span><span style="color:#005CC5;">RouteServiceProvider</span><span style="color:#24292E;">)</span><span style="color:#6A737D;">#130 (3) {</span></span>
<span class="line"><span style="color:#24292E;">          [</span><span style="color:#032F62;">&quot;namespace&quot;</span><span style="color:#24292E;">:</span><span style="color:#D73A49;">protected</span><span style="color:#24292E;">]</span><span style="color:#D73A49;">=&gt;</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#D73A49;">string</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">20</span><span style="color:#24292E;">) </span><span style="color:#032F62;">&quot;App\\Http\\Controllers&quot;</span></span>
<span class="line"><span style="color:#24292E;">          [</span><span style="color:#032F62;">&quot;app&quot;</span><span style="color:#24292E;">:</span><span style="color:#D73A49;">protected</span><span style="color:#24292E;">]</span><span style="color:#D73A49;">=&gt;</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#D73A49;">*</span><span style="color:#005CC5;">RECURSION</span><span style="color:#D73A49;">*</span></span>
<span class="line"><span style="color:#24292E;">          [</span><span style="color:#032F62;">&quot;defer&quot;</span><span style="color:#24292E;">:</span><span style="color:#D73A49;">protected</span><span style="color:#24292E;">]</span><span style="color:#D73A49;">=&gt;</span></span>
<span class="line"><span style="color:#24292E;">          </span><span style="color:#D73A49;">bool</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">false</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">      }</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">    [</span><span style="color:#032F62;">&quot;terminatingCallbacks&quot;</span><span style="color:#24292E;">:</span><span style="color:#D73A49;">protected</span><span style="color:#24292E;">]</span><span style="color:#D73A49;">=&gt;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">array</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">    [</span><span style="color:#032F62;">&quot;serviceProviders&quot;</span><span style="color:#24292E;">:</span><span style="color:#D73A49;">protected</span><span style="color:#24292E;">]</span><span style="color:#D73A49;">=&gt;</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">array</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">25</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">      [</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">]</span><span style="color:#D73A49;">=&gt;</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">object</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">Illuminate</span><span style="color:#24292E;">\\</span><span style="color:#005CC5;">Events</span><span style="color:#24292E;">\\</span><span style="color:#005CC5;">EventServiceProvider</span><span style="color:#24292E;">)</span><span style="color:#6A737D;">#8 (2) {</span></span>
<span class="line"><span style="color:#24292E;">        [</span><span style="color:#032F62;">&quot;app&quot;</span><span style="color:#24292E;">:</span><span style="color:#D73A49;">protected</span><span style="color:#24292E;">]</span><span style="color:#D73A49;">=&gt;</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">*</span><span style="color:#005CC5;">RECURSION</span><span style="color:#D73A49;">*</span></span>
<span class="line"><span style="color:#24292E;">        [</span><span style="color:#032F62;">&quot;defer&quot;</span><span style="color:#24292E;">:</span><span style="color:#D73A49;">protected</span><span style="color:#24292E;">]</span><span style="color:#D73A49;">=&gt;</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">bool</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">false</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">      }</span></span>
<span class="line"><span style="color:#24292E;">      [</span><span style="color:#005CC5;">1</span><span style="color:#24292E;">]</span><span style="color:#D73A49;">=&gt;</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">object</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">Illuminate</span><span style="color:#24292E;">\\</span><span style="color:#005CC5;">Log</span><span style="color:#24292E;">\\</span><span style="color:#005CC5;">LogServiceProvider</span><span style="color:#24292E;">)</span><span style="color:#6A737D;">#10 (2) {</span></span>
<span class="line"><span style="color:#24292E;">        [</span><span style="color:#032F62;">&quot;app&quot;</span><span style="color:#24292E;">:</span><span style="color:#D73A49;">protected</span><span style="color:#24292E;">]</span><span style="color:#D73A49;">=&gt;</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">*</span><span style="color:#005CC5;">RECURSION</span><span style="color:#D73A49;">*</span></span>
<span class="line"><span style="color:#24292E;">        [</span><span style="color:#032F62;">&quot;defer&quot;</span><span style="color:#24292E;">:</span><span style="color:#D73A49;">protected</span><span style="color:#24292E;">]</span><span style="color:#D73A49;">=&gt;</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">bool</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">false</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">      }</span></span>
<span class="line"><span style="color:#24292E;">      [</span><span style="color:#005CC5;">2</span><span style="color:#24292E;">]</span><span style="color:#D73A49;">=&gt;</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">...</span></span>
<span class="line"><span style="color:#24292E;">      </span><span style="color:#D73A49;">...</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">...</span></span></code></pre></div><p>我们看到，HashServiceProvider对象里面包含app保护成员，这个保护成员正好就是全局唯一的容器对象，并且在很多其他地方我们都看到了：*RECURSION*。这是因为每一个ServiceProvider类型的对象都会将app这个容器放到自己的app保护成员变量上，这实际上造成了多次的递归引用。</p><blockquote><p>这里的&quot;ServiceProvider类型&quot;的对象，是指所有服务提供者类的实例，这些服务提供者类有一个共同的特征，就是都继承了<code>\\Illuminate\\Support\\ServiceProvider</code>类。</p></blockquote><p>从app容器这个对象的内容来看，我们发现在应用启动后，app包含了很多provider类型的对象。通过查看isBooted方法的源码，我们能梳理出app的保护成员变量booted是什么时候从false变成true的。在phpstorm IDE中全局搜索&quot;-&gt;booted&quot;，我们能看到，正是在boot方法之后，booted值被赋值为了true：</p><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;"> * Boot the application&#39;s service providers.</span></span>
<span class="line"><span style="color:#6A737D;"> *</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#F97583;">@return</span><span style="color:#6A737D;"> </span><span style="color:#F97583;">void</span></span>
<span class="line"><span style="color:#6A737D;"> */</span></span>
<span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">boot</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#79B8FF;">$this</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">isBooted</span><span style="color:#E1E4E8;">()) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// Once the application has booted we will also fire some &quot;booted&quot; callbacks</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// for any listeners that need to do work after this initial booting gets</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// finished. This is useful when ordering the boot-up processes we run.</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">$this</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">fireAppCallbacks</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">$this</span><span style="color:#F97583;">-&gt;</span><span style="color:#E1E4E8;">bootingCallbacks);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">array_walk</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">$this</span><span style="color:#F97583;">-&gt;</span><span style="color:#E1E4E8;">serviceProviders, </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> ($p) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#79B8FF;">$this</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">bootProvider</span><span style="color:#E1E4E8;">($p);</span></span>
<span class="line"><span style="color:#E1E4E8;">    });</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">$this</span><span style="color:#F97583;">-&gt;</span><span style="color:#E1E4E8;">booted </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">$this</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">fireAppCallbacks</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">$this</span><span style="color:#F97583;">-&gt;</span><span style="color:#E1E4E8;">bootedCallbacks);</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;"> * Boot the application&#39;s service providers.</span></span>
<span class="line"><span style="color:#6A737D;"> *</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#D73A49;">@return</span><span style="color:#6A737D;"> </span><span style="color:#D73A49;">void</span></span>
<span class="line"><span style="color:#6A737D;"> */</span></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">boot</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#005CC5;">$this</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">isBooted</span><span style="color:#24292E;">()) {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">return</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// Once the application has booted we will also fire some &quot;booted&quot; callbacks</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// for any listeners that need to do work after this initial booting gets</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// finished. This is useful when ordering the boot-up processes we run.</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">$this</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">fireAppCallbacks</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">$this</span><span style="color:#D73A49;">-&gt;</span><span style="color:#24292E;">bootingCallbacks);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">array_walk</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">$this</span><span style="color:#D73A49;">-&gt;</span><span style="color:#24292E;">serviceProviders, </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> ($p) {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#005CC5;">$this</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">bootProvider</span><span style="color:#24292E;">($p);</span></span>
<span class="line"><span style="color:#24292E;">    });</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">$this</span><span style="color:#D73A49;">-&gt;</span><span style="color:#24292E;">booted </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">$this</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">fireAppCallbacks</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">$this</span><span style="color:#D73A49;">-&gt;</span><span style="color:#24292E;">bootedCallbacks);</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><blockquote><p>vendor/laravel/framework/src/Illuminate/Foundation/Application.php</p></blockquote><p>上面的代码显示：应用启动后，会逐个去运行每个ServiceProvider类型对象的bootProvider方法。</p><p>这样我们就明白了：在应用启动之前，app容器已经&quot;接收&quot;完了所有的ServiceProvider类型对象，而每个ServiceProvider类型对象的保护成员app又都指向了容器本身，这必然造成大量的递归引用。所以这时候打印一个provider对象的信息就不是那么容易的事情。这里我们可以简单分析一下：程序先调用语句创建出一个对象A，对象A调用语句创建出对象B，同时把A本身注入到B中去，这时代码中一共包含了3个对象的信息：A，A.B, A.B.A（最后这个A.B.A就是递归引用了）。继续调用语句创建出对象C，情况变成了：A, A.B, A.C, A.B.A, A.C.A。即此时变成了5个对象，其中包含两个递归引用。即我们每多注册一个ServiceProvider，对象数量就增加2，并且多一个递归引用。而在我们的配置文件<code>config/app.php</code>文件中定义了多个需要注册的providers：</p><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#9ECBFF;">&#39;providers&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> [</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#6A737D;">/*</span></span>
<span class="line"><span style="color:#6A737D;">	* Laravel Framework Service Providers...</span></span>
<span class="line"><span style="color:#6A737D;">	*/</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#79B8FF;">Illuminate\\Auth\\AuthServiceProvider</span><span style="color:#F97583;">::class</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#79B8FF;">Illuminate\\Broadcasting\\BroadcastServiceProvider</span><span style="color:#F97583;">::class</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#79B8FF;">Illuminate\\Bus\\BusServiceProvider</span><span style="color:#F97583;">::class</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#79B8FF;">Illuminate\\Cache\\CacheServiceProvider</span><span style="color:#F97583;">::class</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#79B8FF;">Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider</span><span style="color:#F97583;">::class</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#79B8FF;">Illuminate\\Cookie\\CookieServiceProvider</span><span style="color:#F97583;">::class</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#79B8FF;">Illuminate\\Database\\DatabaseServiceProvider</span><span style="color:#F97583;">::class</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#79B8FF;">Illuminate\\Encryption\\EncryptionServiceProvider</span><span style="color:#F97583;">::class</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#79B8FF;">Illuminate\\Filesystem\\FilesystemServiceProvider</span><span style="color:#F97583;">::class</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#79B8FF;">Illuminate\\Foundation\\Providers\\FoundationServiceProvider</span><span style="color:#F97583;">::class</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#79B8FF;">Illuminate\\Hashing\\HashServiceProvider</span><span style="color:#F97583;">::class</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#79B8FF;">Illuminate\\Mail\\MailServiceProvider</span><span style="color:#F97583;">::class</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#79B8FF;">Illuminate\\Notifications\\NotificationServiceProvider</span><span style="color:#F97583;">::class</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#79B8FF;">Illuminate\\Pagination\\PaginationServiceProvider</span><span style="color:#F97583;">::class</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#79B8FF;">Illuminate\\Pipeline\\PipelineServiceProvider</span><span style="color:#F97583;">::class</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#79B8FF;">Illuminate\\Queue\\QueueServiceProvider</span><span style="color:#F97583;">::class</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#79B8FF;">Illuminate\\Redis\\RedisServiceProvider</span><span style="color:#F97583;">::class</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#79B8FF;">Illuminate\\Auth\\Passwords\\PasswordResetServiceProvider</span><span style="color:#F97583;">::class</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#79B8FF;">Illuminate\\Session\\SessionServiceProvider</span><span style="color:#F97583;">::class</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#79B8FF;">Illuminate\\Translation\\TranslationServiceProvider</span><span style="color:#F97583;">::class</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#79B8FF;">Illuminate\\Validation\\ValidationServiceProvider</span><span style="color:#F97583;">::class</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#79B8FF;">Illuminate\\View\\ViewServiceProvider</span><span style="color:#F97583;">::class</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#6A737D;">/*</span></span>
<span class="line"><span style="color:#6A737D;">	* Package Service Providers...</span></span>
<span class="line"><span style="color:#6A737D;">	*/</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#6A737D;">/*</span></span>
<span class="line"><span style="color:#6A737D;">	* Application Service Providers...</span></span>
<span class="line"><span style="color:#6A737D;">	*/</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#79B8FF;">App\\Providers\\AppServiceProvider</span><span style="color:#F97583;">::class</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#79B8FF;">App\\Providers\\AuthServiceProvider</span><span style="color:#F97583;">::class</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#6A737D;">// App\\Providers\\BroadcastServiceProvider::class,</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#79B8FF;">App\\Providers\\EventServiceProvider</span><span style="color:#F97583;">::class</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#79B8FF;">App\\Providers\\RouteServiceProvider</span><span style="color:#F97583;">::class</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">],</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#032F62;">&#39;providers&#39;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> [</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#6A737D;">/*</span></span>
<span class="line"><span style="color:#6A737D;">	* Laravel Framework Service Providers...</span></span>
<span class="line"><span style="color:#6A737D;">	*/</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#005CC5;">Illuminate\\Auth\\AuthServiceProvider</span><span style="color:#D73A49;">::class</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#005CC5;">Illuminate\\Broadcasting\\BroadcastServiceProvider</span><span style="color:#D73A49;">::class</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#005CC5;">Illuminate\\Bus\\BusServiceProvider</span><span style="color:#D73A49;">::class</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#005CC5;">Illuminate\\Cache\\CacheServiceProvider</span><span style="color:#D73A49;">::class</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#005CC5;">Illuminate\\Foundation\\Providers\\ConsoleSupportServiceProvider</span><span style="color:#D73A49;">::class</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#005CC5;">Illuminate\\Cookie\\CookieServiceProvider</span><span style="color:#D73A49;">::class</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#005CC5;">Illuminate\\Database\\DatabaseServiceProvider</span><span style="color:#D73A49;">::class</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#005CC5;">Illuminate\\Encryption\\EncryptionServiceProvider</span><span style="color:#D73A49;">::class</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#005CC5;">Illuminate\\Filesystem\\FilesystemServiceProvider</span><span style="color:#D73A49;">::class</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#005CC5;">Illuminate\\Foundation\\Providers\\FoundationServiceProvider</span><span style="color:#D73A49;">::class</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#005CC5;">Illuminate\\Hashing\\HashServiceProvider</span><span style="color:#D73A49;">::class</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#005CC5;">Illuminate\\Mail\\MailServiceProvider</span><span style="color:#D73A49;">::class</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#005CC5;">Illuminate\\Notifications\\NotificationServiceProvider</span><span style="color:#D73A49;">::class</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#005CC5;">Illuminate\\Pagination\\PaginationServiceProvider</span><span style="color:#D73A49;">::class</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#005CC5;">Illuminate\\Pipeline\\PipelineServiceProvider</span><span style="color:#D73A49;">::class</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#005CC5;">Illuminate\\Queue\\QueueServiceProvider</span><span style="color:#D73A49;">::class</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#005CC5;">Illuminate\\Redis\\RedisServiceProvider</span><span style="color:#D73A49;">::class</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#005CC5;">Illuminate\\Auth\\Passwords\\PasswordResetServiceProvider</span><span style="color:#D73A49;">::class</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#005CC5;">Illuminate\\Session\\SessionServiceProvider</span><span style="color:#D73A49;">::class</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#005CC5;">Illuminate\\Translation\\TranslationServiceProvider</span><span style="color:#D73A49;">::class</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#005CC5;">Illuminate\\Validation\\ValidationServiceProvider</span><span style="color:#D73A49;">::class</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#005CC5;">Illuminate\\View\\ViewServiceProvider</span><span style="color:#D73A49;">::class</span><span style="color:#24292E;">,</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#6A737D;">/*</span></span>
<span class="line"><span style="color:#6A737D;">	* Package Service Providers...</span></span>
<span class="line"><span style="color:#6A737D;">	*/</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#6A737D;">/*</span></span>
<span class="line"><span style="color:#6A737D;">	* Application Service Providers...</span></span>
<span class="line"><span style="color:#6A737D;">	*/</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#005CC5;">App\\Providers\\AppServiceProvider</span><span style="color:#D73A49;">::class</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#005CC5;">App\\Providers\\AuthServiceProvider</span><span style="color:#D73A49;">::class</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#6A737D;">// App\\Providers\\BroadcastServiceProvider::class,</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#005CC5;">App\\Providers\\EventServiceProvider</span><span style="color:#D73A49;">::class</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#005CC5;">App\\Providers\\RouteServiceProvider</span><span style="color:#D73A49;">::class</span><span style="color:#24292E;">,</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">],</span></span></code></pre></div><blockquote><p>当然还需要加上系统默认注册的3个ServiceProvider类型的类，才是总的需要注册的Providers数。</p></blockquote><p>通过前面var_dump的输出，我们能发现除了ServiceProvider类型类的注册会造成递归引用外，容器其他的一些成员变量(保存回调事件的成员)保存的闭包中，也包含了递归引用。因此，即使是打印一个对象的信息，也可能造成浏览器内存溢出，导致最后打印失败。</p><p>读者可能会问这样一个问题，为什么Laravel在不中断的情况输出首页又没有这么明显的延时呢？</p><p>答案很简单：var_dump打印某个对象的信息很慢，但是执行对象上的方法却可以很快。就像&quot;我们去拆解一辆汽车的所有零部件，将这些零部件的信息完整呈现出来需要耗费大量时间，但是点火启动汽车却可能不到1秒&quot;一样。</p><p>接下来，我们分析最后一个动作：注册核心别名类。</p><ul><li><p><s>设置基础目录路径</s></p></li><li><p><s>注册基础绑定</s></p></li><li><p><s>注册服务提供者</s></p></li><li><p>注册核心别名类</p></li></ul><p>对应的是下面这行代码：</p><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#79B8FF;">$this</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">registerCoreContainerAliases</span><span style="color:#E1E4E8;">();</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#005CC5;">$this</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">registerCoreContainerAliases</span><span style="color:#24292E;">();</span></span></code></pre></div><p>继续追踪registerCoreContainerAliases方法：</p><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;"> * Register the core class aliases in the container.</span></span>
<span class="line"><span style="color:#6A737D;"> *</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#F97583;">@return</span><span style="color:#6A737D;"> </span><span style="color:#F97583;">void</span></span>
<span class="line"><span style="color:#6A737D;"> */</span></span>
<span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">registerCoreContainerAliases</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">foreach</span><span style="color:#E1E4E8;"> ([</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&#39;app&#39;</span><span style="color:#E1E4E8;">                  </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> [</span><span style="color:#F97583;">self::class</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">\\Illuminate\\Contracts\\Container\\Container</span><span style="color:#F97583;">::class</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">\\Illuminate\\Contracts\\Foundation\\Application</span><span style="color:#F97583;">::class</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">\\Psr\\Container\\ContainerInterface</span><span style="color:#F97583;">::class</span><span style="color:#E1E4E8;">],</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&#39;auth&#39;</span><span style="color:#E1E4E8;">                 </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> [</span><span style="color:#79B8FF;">\\Illuminate\\Auth\\AuthManager</span><span style="color:#F97583;">::class</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">\\Illuminate\\Contracts\\Auth\\Factory</span><span style="color:#F97583;">::class</span><span style="color:#E1E4E8;">],</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&#39;auth.driver&#39;</span><span style="color:#E1E4E8;">          </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> [</span><span style="color:#79B8FF;">\\Illuminate\\Contracts\\Auth\\Guard</span><span style="color:#F97583;">::class</span><span style="color:#E1E4E8;">],</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&#39;blade.compiler&#39;</span><span style="color:#E1E4E8;">       </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> [</span><span style="color:#79B8FF;">\\Illuminate\\View\\Compilers\\BladeCompiler</span><span style="color:#F97583;">::class</span><span style="color:#E1E4E8;">],</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&#39;cache&#39;</span><span style="color:#E1E4E8;">                </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> [</span><span style="color:#79B8FF;">\\Illuminate\\Cache\\CacheManager</span><span style="color:#F97583;">::class</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">\\Illuminate\\Contracts\\Cache\\Factory</span><span style="color:#F97583;">::class</span><span style="color:#E1E4E8;">],</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&#39;cache.store&#39;</span><span style="color:#E1E4E8;">          </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> [</span><span style="color:#79B8FF;">\\Illuminate\\Cache\\Repository</span><span style="color:#F97583;">::class</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">\\Illuminate\\Contracts\\Cache\\Repository</span><span style="color:#F97583;">::class</span><span style="color:#E1E4E8;">],</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&#39;config&#39;</span><span style="color:#E1E4E8;">               </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> [</span><span style="color:#79B8FF;">\\Illuminate\\Config\\Repository</span><span style="color:#F97583;">::class</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">\\Illuminate\\Contracts\\Config\\Repository</span><span style="color:#F97583;">::class</span><span style="color:#E1E4E8;">],</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&#39;cookie&#39;</span><span style="color:#E1E4E8;">               </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> [</span><span style="color:#79B8FF;">\\Illuminate\\Cookie\\CookieJar</span><span style="color:#F97583;">::class</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">\\Illuminate\\Contracts\\Cookie\\Factory</span><span style="color:#F97583;">::class</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">\\Illuminate\\Contracts\\Cookie\\QueueingFactory</span><span style="color:#F97583;">::class</span><span style="color:#E1E4E8;">],</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&#39;encrypter&#39;</span><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> [</span><span style="color:#79B8FF;">\\Illuminate\\Encryption\\Encrypter</span><span style="color:#F97583;">::class</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">\\Illuminate\\Contracts\\Encryption\\Encrypter</span><span style="color:#F97583;">::class</span><span style="color:#E1E4E8;">],</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&#39;db&#39;</span><span style="color:#E1E4E8;">                   </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> [</span><span style="color:#79B8FF;">\\Illuminate\\Database\\DatabaseManager</span><span style="color:#F97583;">::class</span><span style="color:#E1E4E8;">],</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&#39;db.connection&#39;</span><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> [</span><span style="color:#79B8FF;">\\Illuminate\\Database\\Connection</span><span style="color:#F97583;">::class</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">\\Illuminate\\Database\\ConnectionInterface</span><span style="color:#F97583;">::class</span><span style="color:#E1E4E8;">],</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&#39;events&#39;</span><span style="color:#E1E4E8;">               </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> [</span><span style="color:#79B8FF;">\\Illuminate\\Events\\Dispatcher</span><span style="color:#F97583;">::class</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">\\Illuminate\\Contracts\\Events\\Dispatcher</span><span style="color:#F97583;">::class</span><span style="color:#E1E4E8;">],</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&#39;files&#39;</span><span style="color:#E1E4E8;">                </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> [</span><span style="color:#79B8FF;">\\Illuminate\\Filesystem\\Filesystem</span><span style="color:#F97583;">::class</span><span style="color:#E1E4E8;">],</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&#39;filesystem&#39;</span><span style="color:#E1E4E8;">           </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> [</span><span style="color:#79B8FF;">\\Illuminate\\Filesystem\\FilesystemManager</span><span style="color:#F97583;">::class</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">\\Illuminate\\Contracts\\Filesystem\\Factory</span><span style="color:#F97583;">::class</span><span style="color:#E1E4E8;">],</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&#39;filesystem.disk&#39;</span><span style="color:#E1E4E8;">      </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> [</span><span style="color:#79B8FF;">\\Illuminate\\Contracts\\Filesystem\\Filesystem</span><span style="color:#F97583;">::class</span><span style="color:#E1E4E8;">],</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&#39;filesystem.cloud&#39;</span><span style="color:#E1E4E8;">     </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> [</span><span style="color:#79B8FF;">\\Illuminate\\Contracts\\Filesystem\\Cloud</span><span style="color:#F97583;">::class</span><span style="color:#E1E4E8;">],</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&#39;hash&#39;</span><span style="color:#E1E4E8;">                 </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> [</span><span style="color:#79B8FF;">\\Illuminate\\Hashing\\HashManager</span><span style="color:#F97583;">::class</span><span style="color:#E1E4E8;">],</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&#39;hash.driver&#39;</span><span style="color:#E1E4E8;">          </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> [</span><span style="color:#79B8FF;">\\Illuminate\\Contracts\\Hashing\\Hasher</span><span style="color:#F97583;">::class</span><span style="color:#E1E4E8;">],</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&#39;translator&#39;</span><span style="color:#E1E4E8;">           </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> [</span><span style="color:#79B8FF;">\\Illuminate\\Translation\\Translator</span><span style="color:#F97583;">::class</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">\\Illuminate\\Contracts\\Translation\\Translator</span><span style="color:#F97583;">::class</span><span style="color:#E1E4E8;">],</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&#39;log&#39;</span><span style="color:#E1E4E8;">                  </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> [</span><span style="color:#79B8FF;">\\Illuminate\\Log\\LogManager</span><span style="color:#F97583;">::class</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">\\Psr\\Log\\LoggerInterface</span><span style="color:#F97583;">::class</span><span style="color:#E1E4E8;">],</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&#39;mailer&#39;</span><span style="color:#E1E4E8;">               </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> [</span><span style="color:#79B8FF;">\\Illuminate\\Mail\\Mailer</span><span style="color:#F97583;">::class</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">\\Illuminate\\Contracts\\Mail\\Mailer</span><span style="color:#F97583;">::class</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">\\Illuminate\\Contracts\\Mail\\MailQueue</span><span style="color:#F97583;">::class</span><span style="color:#E1E4E8;">],</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&#39;auth.password&#39;</span><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> [</span><span style="color:#79B8FF;">\\Illuminate\\Auth\\Passwords\\PasswordBrokerManager</span><span style="color:#F97583;">::class</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">\\Illuminate\\Contracts\\Auth\\PasswordBrokerFactory</span><span style="color:#F97583;">::class</span><span style="color:#E1E4E8;">],</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&#39;auth.password.broker&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> [</span><span style="color:#79B8FF;">\\Illuminate\\Auth\\Passwords\\PasswordBroker</span><span style="color:#F97583;">::class</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">\\Illuminate\\Contracts\\Auth\\PasswordBroker</span><span style="color:#F97583;">::class</span><span style="color:#E1E4E8;">],</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&#39;queue&#39;</span><span style="color:#E1E4E8;">                </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> [</span><span style="color:#79B8FF;">\\Illuminate\\Queue\\QueueManager</span><span style="color:#F97583;">::class</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">\\Illuminate\\Contracts\\Queue\\Factory</span><span style="color:#F97583;">::class</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">\\Illuminate\\Contracts\\Queue\\Monitor</span><span style="color:#F97583;">::class</span><span style="color:#E1E4E8;">],</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&#39;queue.connection&#39;</span><span style="color:#E1E4E8;">     </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> [</span><span style="color:#79B8FF;">\\Illuminate\\Contracts\\Queue\\Queue</span><span style="color:#F97583;">::class</span><span style="color:#E1E4E8;">],</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&#39;queue.failer&#39;</span><span style="color:#E1E4E8;">         </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> [</span><span style="color:#79B8FF;">\\Illuminate\\Queue\\Failed\\FailedJobProviderInterface</span><span style="color:#F97583;">::class</span><span style="color:#E1E4E8;">],</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&#39;redirect&#39;</span><span style="color:#E1E4E8;">             </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> [</span><span style="color:#79B8FF;">\\Illuminate\\Routing\\Redirector</span><span style="color:#F97583;">::class</span><span style="color:#E1E4E8;">],</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&#39;redis&#39;</span><span style="color:#E1E4E8;">                </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> [</span><span style="color:#79B8FF;">\\Illuminate\\Redis\\RedisManager</span><span style="color:#F97583;">::class</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">\\Illuminate\\Contracts\\Redis\\Factory</span><span style="color:#F97583;">::class</span><span style="color:#E1E4E8;">],</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&#39;request&#39;</span><span style="color:#E1E4E8;">              </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> [</span><span style="color:#79B8FF;">\\Illuminate\\Http\\Request</span><span style="color:#F97583;">::class</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">\\Symfony\\Component\\HttpFoundation\\Request</span><span style="color:#F97583;">::class</span><span style="color:#E1E4E8;">],</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&#39;router&#39;</span><span style="color:#E1E4E8;">               </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> [</span><span style="color:#79B8FF;">\\Illuminate\\Routing\\Router</span><span style="color:#F97583;">::class</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">\\Illuminate\\Contracts\\Routing\\Registrar</span><span style="color:#F97583;">::class</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">\\Illuminate\\Contracts\\Routing\\BindingRegistrar</span><span style="color:#F97583;">::class</span><span style="color:#E1E4E8;">],</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&#39;session&#39;</span><span style="color:#E1E4E8;">              </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> [</span><span style="color:#79B8FF;">\\Illuminate\\Session\\SessionManager</span><span style="color:#F97583;">::class</span><span style="color:#E1E4E8;">],</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&#39;session.store&#39;</span><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> [</span><span style="color:#79B8FF;">\\Illuminate\\Session\\Store</span><span style="color:#F97583;">::class</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">\\Illuminate\\Contracts\\Session\\Session</span><span style="color:#F97583;">::class</span><span style="color:#E1E4E8;">],</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&#39;url&#39;</span><span style="color:#E1E4E8;">                  </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> [</span><span style="color:#79B8FF;">\\Illuminate\\Routing\\UrlGenerator</span><span style="color:#F97583;">::class</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">\\Illuminate\\Contracts\\Routing\\UrlGenerator</span><span style="color:#F97583;">::class</span><span style="color:#E1E4E8;">],</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&#39;validator&#39;</span><span style="color:#E1E4E8;">            </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> [</span><span style="color:#79B8FF;">\\Illuminate\\Validation\\Factory</span><span style="color:#F97583;">::class</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">\\Illuminate\\Contracts\\Validation\\Factory</span><span style="color:#F97583;">::class</span><span style="color:#E1E4E8;">],</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#9ECBFF;">&#39;view&#39;</span><span style="color:#E1E4E8;">                 </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> [</span><span style="color:#79B8FF;">\\Illuminate\\View\\Factory</span><span style="color:#F97583;">::class</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">\\Illuminate\\Contracts\\View\\Factory</span><span style="color:#F97583;">::class</span><span style="color:#E1E4E8;">],</span></span>
<span class="line"><span style="color:#E1E4E8;">    ] </span><span style="color:#F97583;">as</span><span style="color:#E1E4E8;"> $key </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> $aliases) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">foreach</span><span style="color:#E1E4E8;"> ($aliases </span><span style="color:#F97583;">as</span><span style="color:#E1E4E8;"> $alias) {</span></span>
<span class="line"><span style="color:#E1E4E8;">            </span><span style="color:#79B8FF;">$this</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">alias</span><span style="color:#E1E4E8;">($key, $alias);</span></span>
<span class="line"><span style="color:#E1E4E8;">        }</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;"> * Register the core class aliases in the container.</span></span>
<span class="line"><span style="color:#6A737D;"> *</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#D73A49;">@return</span><span style="color:#6A737D;"> </span><span style="color:#D73A49;">void</span></span>
<span class="line"><span style="color:#6A737D;"> */</span></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">registerCoreContainerAliases</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">foreach</span><span style="color:#24292E;"> ([</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&#39;app&#39;</span><span style="color:#24292E;">                  </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> [</span><span style="color:#D73A49;">self::class</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">\\Illuminate\\Contracts\\Container\\Container</span><span style="color:#D73A49;">::class</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">\\Illuminate\\Contracts\\Foundation\\Application</span><span style="color:#D73A49;">::class</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">\\Psr\\Container\\ContainerInterface</span><span style="color:#D73A49;">::class</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&#39;auth&#39;</span><span style="color:#24292E;">                 </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> [</span><span style="color:#005CC5;">\\Illuminate\\Auth\\AuthManager</span><span style="color:#D73A49;">::class</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">\\Illuminate\\Contracts\\Auth\\Factory</span><span style="color:#D73A49;">::class</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&#39;auth.driver&#39;</span><span style="color:#24292E;">          </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> [</span><span style="color:#005CC5;">\\Illuminate\\Contracts\\Auth\\Guard</span><span style="color:#D73A49;">::class</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&#39;blade.compiler&#39;</span><span style="color:#24292E;">       </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> [</span><span style="color:#005CC5;">\\Illuminate\\View\\Compilers\\BladeCompiler</span><span style="color:#D73A49;">::class</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&#39;cache&#39;</span><span style="color:#24292E;">                </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> [</span><span style="color:#005CC5;">\\Illuminate\\Cache\\CacheManager</span><span style="color:#D73A49;">::class</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">\\Illuminate\\Contracts\\Cache\\Factory</span><span style="color:#D73A49;">::class</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&#39;cache.store&#39;</span><span style="color:#24292E;">          </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> [</span><span style="color:#005CC5;">\\Illuminate\\Cache\\Repository</span><span style="color:#D73A49;">::class</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">\\Illuminate\\Contracts\\Cache\\Repository</span><span style="color:#D73A49;">::class</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&#39;config&#39;</span><span style="color:#24292E;">               </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> [</span><span style="color:#005CC5;">\\Illuminate\\Config\\Repository</span><span style="color:#D73A49;">::class</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">\\Illuminate\\Contracts\\Config\\Repository</span><span style="color:#D73A49;">::class</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&#39;cookie&#39;</span><span style="color:#24292E;">               </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> [</span><span style="color:#005CC5;">\\Illuminate\\Cookie\\CookieJar</span><span style="color:#D73A49;">::class</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">\\Illuminate\\Contracts\\Cookie\\Factory</span><span style="color:#D73A49;">::class</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">\\Illuminate\\Contracts\\Cookie\\QueueingFactory</span><span style="color:#D73A49;">::class</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&#39;encrypter&#39;</span><span style="color:#24292E;">            </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> [</span><span style="color:#005CC5;">\\Illuminate\\Encryption\\Encrypter</span><span style="color:#D73A49;">::class</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">\\Illuminate\\Contracts\\Encryption\\Encrypter</span><span style="color:#D73A49;">::class</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&#39;db&#39;</span><span style="color:#24292E;">                   </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> [</span><span style="color:#005CC5;">\\Illuminate\\Database\\DatabaseManager</span><span style="color:#D73A49;">::class</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&#39;db.connection&#39;</span><span style="color:#24292E;">        </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> [</span><span style="color:#005CC5;">\\Illuminate\\Database\\Connection</span><span style="color:#D73A49;">::class</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">\\Illuminate\\Database\\ConnectionInterface</span><span style="color:#D73A49;">::class</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&#39;events&#39;</span><span style="color:#24292E;">               </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> [</span><span style="color:#005CC5;">\\Illuminate\\Events\\Dispatcher</span><span style="color:#D73A49;">::class</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">\\Illuminate\\Contracts\\Events\\Dispatcher</span><span style="color:#D73A49;">::class</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&#39;files&#39;</span><span style="color:#24292E;">                </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> [</span><span style="color:#005CC5;">\\Illuminate\\Filesystem\\Filesystem</span><span style="color:#D73A49;">::class</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&#39;filesystem&#39;</span><span style="color:#24292E;">           </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> [</span><span style="color:#005CC5;">\\Illuminate\\Filesystem\\FilesystemManager</span><span style="color:#D73A49;">::class</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">\\Illuminate\\Contracts\\Filesystem\\Factory</span><span style="color:#D73A49;">::class</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&#39;filesystem.disk&#39;</span><span style="color:#24292E;">      </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> [</span><span style="color:#005CC5;">\\Illuminate\\Contracts\\Filesystem\\Filesystem</span><span style="color:#D73A49;">::class</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&#39;filesystem.cloud&#39;</span><span style="color:#24292E;">     </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> [</span><span style="color:#005CC5;">\\Illuminate\\Contracts\\Filesystem\\Cloud</span><span style="color:#D73A49;">::class</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&#39;hash&#39;</span><span style="color:#24292E;">                 </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> [</span><span style="color:#005CC5;">\\Illuminate\\Hashing\\HashManager</span><span style="color:#D73A49;">::class</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&#39;hash.driver&#39;</span><span style="color:#24292E;">          </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> [</span><span style="color:#005CC5;">\\Illuminate\\Contracts\\Hashing\\Hasher</span><span style="color:#D73A49;">::class</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&#39;translator&#39;</span><span style="color:#24292E;">           </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> [</span><span style="color:#005CC5;">\\Illuminate\\Translation\\Translator</span><span style="color:#D73A49;">::class</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">\\Illuminate\\Contracts\\Translation\\Translator</span><span style="color:#D73A49;">::class</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&#39;log&#39;</span><span style="color:#24292E;">                  </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> [</span><span style="color:#005CC5;">\\Illuminate\\Log\\LogManager</span><span style="color:#D73A49;">::class</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">\\Psr\\Log\\LoggerInterface</span><span style="color:#D73A49;">::class</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&#39;mailer&#39;</span><span style="color:#24292E;">               </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> [</span><span style="color:#005CC5;">\\Illuminate\\Mail\\Mailer</span><span style="color:#D73A49;">::class</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">\\Illuminate\\Contracts\\Mail\\Mailer</span><span style="color:#D73A49;">::class</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">\\Illuminate\\Contracts\\Mail\\MailQueue</span><span style="color:#D73A49;">::class</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&#39;auth.password&#39;</span><span style="color:#24292E;">        </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> [</span><span style="color:#005CC5;">\\Illuminate\\Auth\\Passwords\\PasswordBrokerManager</span><span style="color:#D73A49;">::class</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">\\Illuminate\\Contracts\\Auth\\PasswordBrokerFactory</span><span style="color:#D73A49;">::class</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&#39;auth.password.broker&#39;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> [</span><span style="color:#005CC5;">\\Illuminate\\Auth\\Passwords\\PasswordBroker</span><span style="color:#D73A49;">::class</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">\\Illuminate\\Contracts\\Auth\\PasswordBroker</span><span style="color:#D73A49;">::class</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&#39;queue&#39;</span><span style="color:#24292E;">                </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> [</span><span style="color:#005CC5;">\\Illuminate\\Queue\\QueueManager</span><span style="color:#D73A49;">::class</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">\\Illuminate\\Contracts\\Queue\\Factory</span><span style="color:#D73A49;">::class</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">\\Illuminate\\Contracts\\Queue\\Monitor</span><span style="color:#D73A49;">::class</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&#39;queue.connection&#39;</span><span style="color:#24292E;">     </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> [</span><span style="color:#005CC5;">\\Illuminate\\Contracts\\Queue\\Queue</span><span style="color:#D73A49;">::class</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&#39;queue.failer&#39;</span><span style="color:#24292E;">         </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> [</span><span style="color:#005CC5;">\\Illuminate\\Queue\\Failed\\FailedJobProviderInterface</span><span style="color:#D73A49;">::class</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&#39;redirect&#39;</span><span style="color:#24292E;">             </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> [</span><span style="color:#005CC5;">\\Illuminate\\Routing\\Redirector</span><span style="color:#D73A49;">::class</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&#39;redis&#39;</span><span style="color:#24292E;">                </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> [</span><span style="color:#005CC5;">\\Illuminate\\Redis\\RedisManager</span><span style="color:#D73A49;">::class</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">\\Illuminate\\Contracts\\Redis\\Factory</span><span style="color:#D73A49;">::class</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&#39;request&#39;</span><span style="color:#24292E;">              </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> [</span><span style="color:#005CC5;">\\Illuminate\\Http\\Request</span><span style="color:#D73A49;">::class</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">\\Symfony\\Component\\HttpFoundation\\Request</span><span style="color:#D73A49;">::class</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&#39;router&#39;</span><span style="color:#24292E;">               </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> [</span><span style="color:#005CC5;">\\Illuminate\\Routing\\Router</span><span style="color:#D73A49;">::class</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">\\Illuminate\\Contracts\\Routing\\Registrar</span><span style="color:#D73A49;">::class</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">\\Illuminate\\Contracts\\Routing\\BindingRegistrar</span><span style="color:#D73A49;">::class</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&#39;session&#39;</span><span style="color:#24292E;">              </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> [</span><span style="color:#005CC5;">\\Illuminate\\Session\\SessionManager</span><span style="color:#D73A49;">::class</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&#39;session.store&#39;</span><span style="color:#24292E;">        </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> [</span><span style="color:#005CC5;">\\Illuminate\\Session\\Store</span><span style="color:#D73A49;">::class</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">\\Illuminate\\Contracts\\Session\\Session</span><span style="color:#D73A49;">::class</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&#39;url&#39;</span><span style="color:#24292E;">                  </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> [</span><span style="color:#005CC5;">\\Illuminate\\Routing\\UrlGenerator</span><span style="color:#D73A49;">::class</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">\\Illuminate\\Contracts\\Routing\\UrlGenerator</span><span style="color:#D73A49;">::class</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&#39;validator&#39;</span><span style="color:#24292E;">            </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> [</span><span style="color:#005CC5;">\\Illuminate\\Validation\\Factory</span><span style="color:#D73A49;">::class</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">\\Illuminate\\Contracts\\Validation\\Factory</span><span style="color:#D73A49;">::class</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#032F62;">&#39;view&#39;</span><span style="color:#24292E;">                 </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> [</span><span style="color:#005CC5;">\\Illuminate\\View\\Factory</span><span style="color:#D73A49;">::class</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">\\Illuminate\\Contracts\\View\\Factory</span><span style="color:#D73A49;">::class</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">    ] </span><span style="color:#D73A49;">as</span><span style="color:#24292E;"> $key </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> $aliases) {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">foreach</span><span style="color:#24292E;"> ($aliases </span><span style="color:#D73A49;">as</span><span style="color:#24292E;"> $alias) {</span></span>
<span class="line"><span style="color:#24292E;">            </span><span style="color:#005CC5;">$this</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">alias</span><span style="color:#24292E;">($key, $alias);</span></span>
<span class="line"><span style="color:#24292E;">        }</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><blockquote><p>vendor/laravel/framework/src/Illuminate/Foundation/Application.php</p></blockquote><p>这个方法的代码相对来说，是比较容易理解的，相当于是双重foreach循环。第一层循环，从数组中抽出单个的$key和$aliases。第二层循环，因为$aliases可能是多维数组，因此继续遍历$aliases数组，将其中的单个值和之前的$key组合为参数，传递给$alias方法。</p><p>我们重点关注一下alias方法：</p><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki github-dark has-diff vp-code-dark"><code><span class="line"><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;"> * Alias a type to a different name.</span></span>
<span class="line"><span style="color:#6A737D;"> *</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#F97583;">@param</span><span style="color:#6A737D;">  </span><span style="color:#F97583;">string</span><span style="color:#6A737D;">  $abstract</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#F97583;">@param</span><span style="color:#6A737D;">  </span><span style="color:#F97583;">string</span><span style="color:#6A737D;">  $alias</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#F97583;">@return</span><span style="color:#6A737D;"> </span><span style="color:#F97583;">void</span></span>
<span class="line"><span style="color:#6A737D;"> *</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#F97583;">@throws</span><span style="color:#6A737D;"> </span><span style="color:#79B8FF;">\\LogicException</span></span>
<span class="line"><span style="color:#6A737D;"> */</span></span>
<span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">alias</span><span style="color:#E1E4E8;">($abstract, $alias)</span></span>
<span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> ($alias </span><span style="color:#F97583;">===</span><span style="color:#E1E4E8;"> $abstract) {</span></span>
<span class="line"><span style="color:#E1E4E8;">        </span><span style="color:#F97583;">throw</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">LogicException</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;[{</span><span style="color:#E1E4E8;">$abstract</span><span style="color:#9ECBFF;">}] is aliased to itself.&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">$this</span><span style="color:#F97583;">-&gt;</span><span style="color:#E1E4E8;">aliases[$alias] </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> $abstract;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">$this</span><span style="color:#F97583;">-&gt;</span><span style="color:#E1E4E8;">abstractAliases[$abstract][] </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> $alias;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light has-diff vp-code-light"><code><span class="line"><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;"> * Alias a type to a different name.</span></span>
<span class="line"><span style="color:#6A737D;"> *</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#D73A49;">@param</span><span style="color:#6A737D;">  </span><span style="color:#D73A49;">string</span><span style="color:#6A737D;">  $abstract</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#D73A49;">@param</span><span style="color:#6A737D;">  </span><span style="color:#D73A49;">string</span><span style="color:#6A737D;">  $alias</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#D73A49;">@return</span><span style="color:#6A737D;"> </span><span style="color:#D73A49;">void</span></span>
<span class="line"><span style="color:#6A737D;"> *</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#D73A49;">@throws</span><span style="color:#6A737D;"> </span><span style="color:#005CC5;">\\LogicException</span></span>
<span class="line"><span style="color:#6A737D;"> */</span></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">alias</span><span style="color:#24292E;">($abstract, $alias)</span></span>
<span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> ($alias </span><span style="color:#D73A49;">===</span><span style="color:#24292E;"> $abstract) {</span></span>
<span class="line"><span style="color:#24292E;">        </span><span style="color:#D73A49;">throw</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">LogicException</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&quot;[{</span><span style="color:#24292E;">$abstract</span><span style="color:#032F62;">}] is aliased to itself.&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">$this</span><span style="color:#D73A49;">-&gt;</span><span style="color:#24292E;">aliases[$alias] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> $abstract;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">$this</span><span style="color:#D73A49;">-&gt;</span><span style="color:#24292E;">abstractAliases[$abstract][] </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> $alias;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>这里面的逻辑也很简单，就是对当前对象的aliases和abstractAliases成员变量进行赋值。</p><p>至此，我们终于讲完了【艰难的开始】这一节中说的全部四个步骤：</p><ul><li><s>设置基础目录路径</s></li><li><s>注册基础绑定</s></li><li><s>注册服务提供者</s></li><li><s>注册核心别名类</s></li></ul><p>现在，让我们重新回到app.php文件源码：</p><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">&lt;?</span><span style="color:#79B8FF;">php</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">/*</span></span>
<span class="line"><span style="color:#6A737D;">|--------------------------------------------------------------------------</span></span>
<span class="line"><span style="color:#6A737D;">| Create The Application</span></span>
<span class="line"><span style="color:#6A737D;">|--------------------------------------------------------------------------</span></span>
<span class="line"><span style="color:#6A737D;">|</span></span>
<span class="line"><span style="color:#6A737D;">| The first thing we will do is create a new Laravel application instance</span></span>
<span class="line"><span style="color:#6A737D;">| which serves as the &quot;glue&quot; for all the components of Laravel, and is</span></span>
<span class="line"><span style="color:#6A737D;">| the IoC container for the system binding all of the various parts.</span></span>
<span class="line"><span style="color:#6A737D;">|</span></span>
<span class="line"><span style="color:#6A737D;">*/</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">$app </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">Illuminate\\Foundation\\Application</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    $_ENV[</span><span style="color:#9ECBFF;">&#39;APP_BASE_PATH&#39;</span><span style="color:#E1E4E8;">] </span><span style="color:#F97583;">??</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">dirname</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">__DIR__</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">/*</span></span>
<span class="line"><span style="color:#6A737D;">|--------------------------------------------------------------------------</span></span>
<span class="line"><span style="color:#6A737D;">| Bind Important Interfaces</span></span>
<span class="line"><span style="color:#6A737D;">|--------------------------------------------------------------------------</span></span>
<span class="line"><span style="color:#6A737D;">|</span></span>
<span class="line"><span style="color:#6A737D;">| Next, we need to bind some important interfaces into the container so</span></span>
<span class="line"><span style="color:#6A737D;">| we will be able to resolve them when needed. The kernels serve the</span></span>
<span class="line"><span style="color:#6A737D;">| incoming requests to this application from both the web and CLI.</span></span>
<span class="line"><span style="color:#6A737D;">|</span></span>
<span class="line"><span style="color:#6A737D;">*/</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">$app</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">singleton</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">Illuminate\\Contracts\\Http\\Kernel</span><span style="color:#F97583;">::class</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">App\\Http\\Kernel</span><span style="color:#F97583;">::class</span></span>
<span class="line"><span style="color:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">$app</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">singleton</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">Illuminate\\Contracts\\Console\\Kernel</span><span style="color:#F97583;">::class</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">App\\Console\\Kernel</span><span style="color:#F97583;">::class</span></span>
<span class="line"><span style="color:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">$app</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">singleton</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">Illuminate\\Contracts\\Debug\\ExceptionHandler</span><span style="color:#F97583;">::class</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#79B8FF;">App\\Exceptions\\Handler</span><span style="color:#F97583;">::class</span></span>
<span class="line"><span style="color:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">/*</span></span>
<span class="line"><span style="color:#6A737D;">|--------------------------------------------------------------------------</span></span>
<span class="line"><span style="color:#6A737D;">| Return The Application</span></span>
<span class="line"><span style="color:#6A737D;">|--------------------------------------------------------------------------</span></span>
<span class="line"><span style="color:#6A737D;">|</span></span>
<span class="line"><span style="color:#6A737D;">| This script returns the application instance. The instance is given to</span></span>
<span class="line"><span style="color:#6A737D;">| the calling script so we can separate the building of the instances</span></span>
<span class="line"><span style="color:#6A737D;">| from the actual running of the application and sending responses.</span></span>
<span class="line"><span style="color:#6A737D;">|</span></span>
<span class="line"><span style="color:#6A737D;">*/</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> $app;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">&lt;?</span><span style="color:#005CC5;">php</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">/*</span></span>
<span class="line"><span style="color:#6A737D;">|--------------------------------------------------------------------------</span></span>
<span class="line"><span style="color:#6A737D;">| Create The Application</span></span>
<span class="line"><span style="color:#6A737D;">|--------------------------------------------------------------------------</span></span>
<span class="line"><span style="color:#6A737D;">|</span></span>
<span class="line"><span style="color:#6A737D;">| The first thing we will do is create a new Laravel application instance</span></span>
<span class="line"><span style="color:#6A737D;">| which serves as the &quot;glue&quot; for all the components of Laravel, and is</span></span>
<span class="line"><span style="color:#6A737D;">| the IoC container for the system binding all of the various parts.</span></span>
<span class="line"><span style="color:#6A737D;">|</span></span>
<span class="line"><span style="color:#6A737D;">*/</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">$app </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">Illuminate\\Foundation\\Application</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    $_ENV[</span><span style="color:#032F62;">&#39;APP_BASE_PATH&#39;</span><span style="color:#24292E;">] </span><span style="color:#D73A49;">??</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">dirname</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">__DIR__</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">/*</span></span>
<span class="line"><span style="color:#6A737D;">|--------------------------------------------------------------------------</span></span>
<span class="line"><span style="color:#6A737D;">| Bind Important Interfaces</span></span>
<span class="line"><span style="color:#6A737D;">|--------------------------------------------------------------------------</span></span>
<span class="line"><span style="color:#6A737D;">|</span></span>
<span class="line"><span style="color:#6A737D;">| Next, we need to bind some important interfaces into the container so</span></span>
<span class="line"><span style="color:#6A737D;">| we will be able to resolve them when needed. The kernels serve the</span></span>
<span class="line"><span style="color:#6A737D;">| incoming requests to this application from both the web and CLI.</span></span>
<span class="line"><span style="color:#6A737D;">|</span></span>
<span class="line"><span style="color:#6A737D;">*/</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">$app</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">singleton</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">Illuminate\\Contracts\\Http\\Kernel</span><span style="color:#D73A49;">::class</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">App\\Http\\Kernel</span><span style="color:#D73A49;">::class</span></span>
<span class="line"><span style="color:#24292E;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">$app</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">singleton</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">Illuminate\\Contracts\\Console\\Kernel</span><span style="color:#D73A49;">::class</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">App\\Console\\Kernel</span><span style="color:#D73A49;">::class</span></span>
<span class="line"><span style="color:#24292E;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">$app</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">singleton</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">Illuminate\\Contracts\\Debug\\ExceptionHandler</span><span style="color:#D73A49;">::class</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#005CC5;">App\\Exceptions\\Handler</span><span style="color:#D73A49;">::class</span></span>
<span class="line"><span style="color:#24292E;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">/*</span></span>
<span class="line"><span style="color:#6A737D;">|--------------------------------------------------------------------------</span></span>
<span class="line"><span style="color:#6A737D;">| Return The Application</span></span>
<span class="line"><span style="color:#6A737D;">|--------------------------------------------------------------------------</span></span>
<span class="line"><span style="color:#6A737D;">|</span></span>
<span class="line"><span style="color:#6A737D;">| This script returns the application instance. The instance is given to</span></span>
<span class="line"><span style="color:#6A737D;">| the calling script so we can separate the building of the instances</span></span>
<span class="line"><span style="color:#6A737D;">| from the actual running of the application and sending responses.</span></span>
<span class="line"><span style="color:#6A737D;">|</span></span>
<span class="line"><span style="color:#6A737D;">*/</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">return</span><span style="color:#24292E;"> $app;</span></span></code></pre></div><blockquote><p>bootstrap/app.php</p></blockquote><p>可以看到，剩下的三行代码，都是采用singleton方法，给app容器&quot;绑定&quot;相关的类。</p><blockquote><p>singleton方法我们在第五章中已经讲解过，此处不再赘述</p></blockquote><p>这里，我们简单看一下绑定的这几个类的作用：</p><ul><li>App\\Http\\Kernel类是处理HTTP请求的，大家可以通过阅读源码看到，这个Kernel类不仅包含处理http请求参数的方法，还内置了&quot;嵌入容器对象&quot;，&quot;嵌入路由类&quot;，处理中间件，执行Laravel核心路由解析等等全部核心过程</li><li>App\\Console\\Kernel类是处理命令行环境下php执行相关动作的</li><li>App\\Exceptions\\Handler类是处理异常相关的</li></ul><p>至此，我们终于讲完了第二章中的&quot;第二阶段&quot;。</p>`,74),c=[t];function r(y,E,i,F,u,d){return n(),a("div",null,c)}const D=s(e,[["render",r]]);export{A as __pageData,D as default};
