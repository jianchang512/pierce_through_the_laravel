import{_ as s,o as n,c as a,Q as p}from"./chunks/framework.a9d1f0e8.js";const h=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"9.md","filePath":"9.md"}'),l={name:"9.md"},o=p(`<h2 id="第九章-渲染页面" tabindex="-1">第九章：渲染页面 <a class="header-anchor" href="#第九章-渲染页面" aria-label="Permalink to &quot;第九章：渲染页面&quot;">​</a></h2><p>这一节，我们实际上只需要分析一条语句：</p><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">$response</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">send</span><span style="color:#E1E4E8;">();</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">$response</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">send</span><span style="color:#24292E;">();</span></span></code></pre></div><blockquote><p>public/index.php</p></blockquote><p>我们知道，response实际上是\\symfony\\http-foundation\\Response类的一个实例，因此要找到send方法很容易：</p><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;"> * Sends HTTP headers and content.</span></span>
<span class="line"><span style="color:#6A737D;"> *</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#F97583;">@return</span><span style="color:#6A737D;"> $this</span></span>
<span class="line"><span style="color:#6A737D;"> */</span></span>
<span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">send</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#79B8FF;">$this</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">sendHeaders</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#79B8FF;">$this</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">sendContent</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#79B8FF;">\\function_exists</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;fastcgi_finish_request&#39;</span><span style="color:#E1E4E8;">)) {</span></span>
<span class="line"><span style="color:#E1E4E8;">		</span><span style="color:#79B8FF;">fastcgi_finish_request</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">	} </span><span style="color:#F97583;">elseif</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">!</span><span style="color:#79B8FF;">\\in_array</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">\\PHP_SAPI</span><span style="color:#E1E4E8;">, [</span><span style="color:#9ECBFF;">&#39;cli&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;phpdbg&#39;</span><span style="color:#E1E4E8;">], </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">)) {</span></span>
<span class="line"><span style="color:#E1E4E8;">		</span><span style="color:#F97583;">static::</span><span style="color:#B392F0;">closeOutputBuffers</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">		</span><span style="color:#79B8FF;">flush</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">	}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">$this</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;"> * Sends HTTP headers and content.</span></span>
<span class="line"><span style="color:#6A737D;"> *</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#D73A49;">@return</span><span style="color:#6A737D;"> $this</span></span>
<span class="line"><span style="color:#6A737D;"> */</span></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">send</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#005CC5;">$this</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">sendHeaders</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#005CC5;">$this</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">sendContent</span><span style="color:#24292E;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#005CC5;">\\function_exists</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;fastcgi_finish_request&#39;</span><span style="color:#24292E;">)) {</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#005CC5;">fastcgi_finish_request</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">	} </span><span style="color:#D73A49;">elseif</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">!</span><span style="color:#005CC5;">\\in_array</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">\\PHP_SAPI</span><span style="color:#24292E;">, [</span><span style="color:#032F62;">&#39;cli&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;phpdbg&#39;</span><span style="color:#24292E;">], </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">)) {</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">static::</span><span style="color:#6F42C1;">closeOutputBuffers</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#005CC5;">flush</span><span style="color:#24292E;">();</span></span>
<span class="line"><span style="color:#24292E;">	}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">$this</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><blockquote><p>vendor/symfony/http-foundation/Response.php</p></blockquote><p>接下来，就是继续追踪sendHeaders方法和sendContents方法：</p><p>sendHeaders:</p><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;"> * Sends HTTP headers.</span></span>
<span class="line"><span style="color:#6A737D;"> *</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#F97583;">@return</span><span style="color:#6A737D;"> $this</span></span>
<span class="line"><span style="color:#6A737D;"> */</span></span>
<span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">sendHeaders</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#6A737D;">// headers have already been sent by the developer</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#79B8FF;">headers_sent</span><span style="color:#E1E4E8;">()) {</span></span>
<span class="line"><span style="color:#E1E4E8;">		</span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">$this</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">	}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#6A737D;">// headers</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#F97583;">foreach</span><span style="color:#E1E4E8;"> (</span><span style="color:#79B8FF;">$this</span><span style="color:#F97583;">-&gt;</span><span style="color:#E1E4E8;">headers</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">allPreserveCaseWithoutCookies</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">as</span><span style="color:#E1E4E8;"> $name </span><span style="color:#F97583;">=&gt;</span><span style="color:#E1E4E8;"> $values) {</span></span>
<span class="line"><span style="color:#E1E4E8;">		$replace </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">===</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">strcasecmp</span><span style="color:#E1E4E8;">($name, </span><span style="color:#9ECBFF;">&#39;Content-Type&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">		</span><span style="color:#F97583;">foreach</span><span style="color:#E1E4E8;"> ($values </span><span style="color:#F97583;">as</span><span style="color:#E1E4E8;"> $value) {</span></span>
<span class="line"><span style="color:#E1E4E8;">			</span><span style="color:#79B8FF;">header</span><span style="color:#E1E4E8;">($name</span><span style="color:#F97583;">.</span><span style="color:#9ECBFF;">&#39;: &#39;</span><span style="color:#F97583;">.</span><span style="color:#E1E4E8;">$value, $replace, </span><span style="color:#79B8FF;">$this</span><span style="color:#F97583;">-&gt;</span><span style="color:#E1E4E8;">statusCode);</span></span>
<span class="line"><span style="color:#E1E4E8;">		}</span></span>
<span class="line"><span style="color:#E1E4E8;">	}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#6A737D;">// cookies</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#F97583;">foreach</span><span style="color:#E1E4E8;"> (</span><span style="color:#79B8FF;">$this</span><span style="color:#F97583;">-&gt;</span><span style="color:#E1E4E8;">headers</span><span style="color:#F97583;">-&gt;</span><span style="color:#B392F0;">getCookies</span><span style="color:#E1E4E8;">() </span><span style="color:#F97583;">as</span><span style="color:#E1E4E8;"> $cookie) {</span></span>
<span class="line"><span style="color:#E1E4E8;">		</span><span style="color:#79B8FF;">header</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;Set-Cookie: &#39;</span><span style="color:#F97583;">.</span><span style="color:#E1E4E8;">$cookie, </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">$this</span><span style="color:#F97583;">-&gt;</span><span style="color:#E1E4E8;">statusCode);</span></span>
<span class="line"><span style="color:#E1E4E8;">	}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#6A737D;">// status</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#79B8FF;">header</span><span style="color:#E1E4E8;">(</span><span style="color:#79B8FF;">sprintf</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;HTTP/%s %s %s&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">$this</span><span style="color:#F97583;">-&gt;</span><span style="color:#E1E4E8;">version, </span><span style="color:#79B8FF;">$this</span><span style="color:#F97583;">-&gt;</span><span style="color:#E1E4E8;">statusCode, </span><span style="color:#79B8FF;">$this</span><span style="color:#F97583;">-&gt;</span><span style="color:#E1E4E8;">statusText), </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">, </span><span style="color:#79B8FF;">$this</span><span style="color:#F97583;">-&gt;</span><span style="color:#E1E4E8;">statusCode);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">$this</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;"> * Sends HTTP headers.</span></span>
<span class="line"><span style="color:#6A737D;"> *</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#D73A49;">@return</span><span style="color:#6A737D;"> $this</span></span>
<span class="line"><span style="color:#6A737D;"> */</span></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">sendHeaders</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#6A737D;">// headers have already been sent by the developer</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#005CC5;">headers_sent</span><span style="color:#24292E;">()) {</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">$this</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">	}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#6A737D;">// headers</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#D73A49;">foreach</span><span style="color:#24292E;"> (</span><span style="color:#005CC5;">$this</span><span style="color:#D73A49;">-&gt;</span><span style="color:#24292E;">headers</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">allPreserveCaseWithoutCookies</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">as</span><span style="color:#24292E;"> $name </span><span style="color:#D73A49;">=&gt;</span><span style="color:#24292E;"> $values) {</span></span>
<span class="line"><span style="color:#24292E;">		$replace </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">0</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">===</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">strcasecmp</span><span style="color:#24292E;">($name, </span><span style="color:#032F62;">&#39;Content-Type&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">foreach</span><span style="color:#24292E;"> ($values </span><span style="color:#D73A49;">as</span><span style="color:#24292E;"> $value) {</span></span>
<span class="line"><span style="color:#24292E;">			</span><span style="color:#005CC5;">header</span><span style="color:#24292E;">($name</span><span style="color:#D73A49;">.</span><span style="color:#032F62;">&#39;: &#39;</span><span style="color:#D73A49;">.</span><span style="color:#24292E;">$value, $replace, </span><span style="color:#005CC5;">$this</span><span style="color:#D73A49;">-&gt;</span><span style="color:#24292E;">statusCode);</span></span>
<span class="line"><span style="color:#24292E;">		}</span></span>
<span class="line"><span style="color:#24292E;">	}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#6A737D;">// cookies</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#D73A49;">foreach</span><span style="color:#24292E;"> (</span><span style="color:#005CC5;">$this</span><span style="color:#D73A49;">-&gt;</span><span style="color:#24292E;">headers</span><span style="color:#D73A49;">-&gt;</span><span style="color:#6F42C1;">getCookies</span><span style="color:#24292E;">() </span><span style="color:#D73A49;">as</span><span style="color:#24292E;"> $cookie) {</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#005CC5;">header</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;Set-Cookie: &#39;</span><span style="color:#D73A49;">.</span><span style="color:#24292E;">$cookie, </span><span style="color:#005CC5;">false</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">$this</span><span style="color:#D73A49;">-&gt;</span><span style="color:#24292E;">statusCode);</span></span>
<span class="line"><span style="color:#24292E;">	}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#6A737D;">// status</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#005CC5;">header</span><span style="color:#24292E;">(</span><span style="color:#005CC5;">sprintf</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;HTTP/%s %s %s&#39;</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">$this</span><span style="color:#D73A49;">-&gt;</span><span style="color:#24292E;">version, </span><span style="color:#005CC5;">$this</span><span style="color:#D73A49;">-&gt;</span><span style="color:#24292E;">statusCode, </span><span style="color:#005CC5;">$this</span><span style="color:#D73A49;">-&gt;</span><span style="color:#24292E;">statusText), </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">, </span><span style="color:#005CC5;">$this</span><span style="color:#D73A49;">-&gt;</span><span style="color:#24292E;">statusCode);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">$this</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><blockquote><p>vendor/symfony/http-foundation/Response.php</p></blockquote><p>这个方法里面的代码容易理解，就是设置HTTP的请求头，至于请求头中的信息来源，框架在前面程序的处理中已经&quot;装填&quot;好了。</p><p>sendContents:</p><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;"> * Sends content for the current web response.</span></span>
<span class="line"><span style="color:#6A737D;"> *</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#F97583;">@return</span><span style="color:#6A737D;"> $this</span></span>
<span class="line"><span style="color:#6A737D;"> */</span></span>
<span class="line"><span style="color:#F97583;">public</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">sendContent</span><span style="color:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#79B8FF;">echo</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">$this</span><span style="color:#F97583;">-&gt;</span><span style="color:#E1E4E8;">content;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">$this</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">/**</span></span>
<span class="line"><span style="color:#6A737D;"> * Sends content for the current web response.</span></span>
<span class="line"><span style="color:#6A737D;"> *</span></span>
<span class="line"><span style="color:#6A737D;"> * </span><span style="color:#D73A49;">@return</span><span style="color:#6A737D;"> $this</span></span>
<span class="line"><span style="color:#6A737D;"> */</span></span>
<span class="line"><span style="color:#D73A49;">public</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">sendContent</span><span style="color:#24292E;">()</span></span>
<span class="line"><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#005CC5;">echo</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">$this</span><span style="color:#D73A49;">-&gt;</span><span style="color:#24292E;">content;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">$this</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><blockquote><p>vendor/symfony/http-foundation/Response.php</p></blockquote><p>这个方法中的代码简单解释就是：输出当前对象的content成员变量值并返回当前对象。至于content变量的内容是什么时候赋值的，这和上一节我们讲的route类中的run方法相关。</p>`,16),e=[o];function t(c,r,y,E,i,F){return n(),a("div",null,e)}const C=s(l,[["render",t]]);export{h as __pageData,C as default};
